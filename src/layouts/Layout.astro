---
import BaseHead from "../components/BaseHead.astro";

const path = new URL(Astro.request.url).pathname;

let { title, description } = Astro.props;
if (!title) title = "Benjamin Pickford | Software Developer blog";
if (!description) description = "Personal site and blog for Benjamin Pickford | Software Developer";

const links = [
  { href: '/', label: 'Home', isActive: path === '/' },
  { href: '/blog/', label: 'Blog', isActive: path && (path === '/blog/' || path.includes('posts')) }
]
---

<html lang="en">
  <head>
    <BaseHead {title} {description} />
  </head>
  <body class="bg-slate-4 pt-8 sm:px-2 md:px-4 m-auto">
    <div>
      <div class="text-center text-cyan-12">
      <h1 class="text-5xl">
        <span class="bg-cyan-6 rounded px-4 py-1 rotate-1 inline-block">Benjamin</span> Pickford
      </h1>
      <h2 class="text-center mt-4 text-xl text-cyan-4 bg-cyan-12 w-max px-4 py-1 m-auto">Software Engineer</h2>
    </div>
      <div class="m-auto w-full flex gap-24 justify-center mt-6">

      {links.map(({ href, label, isActive }) => (
        <a
          class={`
            text-md font-bold relative text-cyan-11
          `}
          href={href}
          data-active={isActive ? 'true' : 'false'}
          >
          {label}
          </a>
      ))}
      </div>
      <main class="container m-auto mt-4">
        <slot />
      </main>
    </div>
  </body>
</html>
<style>
  a {
    text-decoration: none;
    color: inherit;
    transition: border 1s ease-in;
  }
  a::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 2px;
    bottom: 0;
    left: 0;
    background: hsl(192 88.0% 12.5%);
    visibility: hidden;
    border-radius: 5px;
    transform: scaleX(0);
    transition: 0.15s linear;
  }
  a:hover::before {
    transform: scaleX(1);
    visibility: visible;
  }
  a[data-active="true"]::before {
    transform: scaleX(1);
    visibility: visible;
  }
</style>